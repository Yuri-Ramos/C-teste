# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main

pool:
  vmImage: ubuntu-latest


steps:
# Install OWASP ZAP
- script: |
    sudo apt-get update
    sudo apt-get install -y wget openjdk-11-jre
    wget https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2_15_0_unix.sh
    chmod +x ZAP_2_15_0_unix.sh
    sudo ./ZAP_2_15_0_unix.sh -q -dir /opt/zap
    if [ -L /usr/local/bin/zap.sh ]; then
        sudo rm /usr/local/bin/zap.sh
    fi
    sudo ln -s /opt/zap/zap.sh /usr/local/bin/zap.sh
  displayName: 'Install OWASP ZAP'

# Install zap-cli
- script: |
    sudo apt-get install -y python3-pip
    pip3 install zapcli
  displayName: 'Install zap-cli'

#teste
- script: |
    echo" ----------------------------------------rodou at√© aqui"
  displayName: 'rodou'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

# steps:
# # Install OWASP ZAP
# - script: |
#     sudo apt-get update
#     sudo apt-get install -y wget openjdk-11-jre
#     wget https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2_15_0_unix.sh
#     chmod +x ZAP_2_15_0_unix.sh
#     sudo ./ZAP_2_15_0_unix.sh -q -dir /opt/zap
#     if [ -L /usr/local/bin/zap.sh ]; then
#         sudo rm /usr/local/bin/zap.sh
#     fi
#     sudo ln -s /opt/zap/zap.sh /usr/local/bin/zap.sh
#   displayName: 'Install OWASP ZAP'
  
# # Install zap-cli
# - script: |
#     sudo apt-get install -y python3-pip
#     pip3 install zapcli
#     echo teste
#   displayName: 'Install zap-cli'

# # Start OWASP ZAP in daemon mode and run scan
# - script: |
#     /opt/zap/zap.sh -daemon -host 127.0.0.1 -port 8080
#     echo "Waiting for ZAP to start..."
#     sleep 60  # Wait for ZAP to start
#     echo "Checking ZAP status..."
#     zap-cli status -t 120  # Wait up to 2 minutes for ZAP to be ready
#     echo "Opening URL..."
#     zap-cli open-url https://www.t2mlab.com/
#     echo "Running spider..."
#     zap-cli spider https://www.t2mlab.com/
#     echo "Running active scan..."
#     zap-cli active-scan https://www.t2mlab.com/
#     echo "Generating reports..."
#     zap-cli report -o owaspzap/report.json -f json
#     zap-cli report -o owaspzap/report.html -f html
#   displayName: 'Run ZAP OWASP Scan'

